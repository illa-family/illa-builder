import { PanelConfig } from "@/page/App/components/InspectPanel/interface"
import { VALIDATION_TYPES } from "@/utils/validationFactory"
import i18n from "@/i18n/config"

const BASE_TYPE = "ACTION_TYPE"

export const EVENT_HANDLER_CONFIG: PanelConfig[] = [
  {
    id: `${BASE_TYPE}-interaction-success-event-handler`,
    attrName: "successEvents",
    labelName: i18n.t("Success"),
    // labelDesc: i18n.t("xxxxx"),
    setterType: "EVENT_HANDLER_SETTER",
    defaultValue: "success",
    useCustomLayout: true,
    childrenSetter: [
      {
        id: "event",
        labelName: i18n.t("editor.inspect.setter_label.event"),
        setterType: "BASE_SELECT_SETTER",
        attrName: "eventType",
        options: [{ label: "Success", value: "success" }],
      },
      {
        id: "action",
        labelName: i18n.t("editor.inspect.setter_label.action"),
        setterType: "EVENT_ACTION_SELECT_SETTER",
        attrName: "actionType",
        options: [
          {
            label: "editor.inspect.setter_label.trigger_query",
            value: "datasource",
          },
          {
            label: "editor.inspect.setter_label.control_component",
            value: "widget",
          },
          {
            label: "editor.inspect.setter_label.run_script",
            value: "script",
          },
          {
            label: "editor.inspect.setter_label.go_to_url",
            value: "openUrl",
          },
          {
            label: "editor.inspect.setter_label.show_notification",
            value: "showNotification",
          },
        ],
      },
      {
        id: "query",
        labelName: i18n.t("Query"),
        setterType: "BASE_SELECT_SETTER",
        attrName: "queryID",
        bindAttrName: "actionType",
        shown: (type) => type === "datasource",
      },
      {
        id: "component",
        labelName: i18n.t("Component"),
        setterType: "EVENT_TARGET_SELECT_SETTER",
        attrName: "widgetID",
        bindAttrName: "actionType",
        shown: (type) => type === "widget",
      },
      {
        id: "Method",
        labelName: i18n.t("Method"),
        setterType: "EVENT_WIDGET_METHOD_SELECT_SETTER",
        attrName: "widgetMethod",
        bindAttrName: "widgetID",
        shown: (widgetID) => !!widgetID,
      },
      {
        id: "Value",
        labelName: i18n.t("Value"),
        setterType: "INPUT_SETTER",
        attrName: "widgetTargetValue",
        bindAttrName: "widgetMethod",
        shown: (widgetMethod) => widgetMethod === "setValue",
      },
      {
        id: "imageUrl",
        labelName: i18n.t("Value"),
        setterType: "INPUT_SETTER",
        attrName: "widgetTargetValue",
        bindAttrName: "widgetMethod",
        shown: (widgetMethod) => widgetMethod === "setImageUrl",
      },
      {
        id: "disabled",
        labelName: i18n.t("editor.inspect.setter_label.disabled"),
        setterType: "DYNAMIC_SWITCH_SETTER",
        expectedType: VALIDATION_TYPES.BOOLEAN,
        attrName: "disabled",
        bindAttrName: "type",
        useCustomLayout: true,
        shown: (type) => type === "widget",
      },
      {
        id: "script",
        setterType: "INPUT_SETTER",
        attrName: "script",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.STRING,
        shown: (type) => type === "script",
      },
      {
        id: "URL",
        labelName: i18n.t("URL"),
        setterType: "INPUT_SETTER",
        attrName: "url",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.STRING,
        shown: (type) => type === "openUrl",
      },
      {
        id: "newTab",
        labelName: i18n.t("New Tab"),
        setterType: "DYNAMIC_SWITCH_SETTER",
        expectedType: VALIDATION_TYPES.BOOLEAN,
        attrName: "newTab",
        bindAttrName: "actionType",
        useCustomLayout: true,
        shown: (type) => type === "openUrl",
      },
      {
        id: "title",
        labelName: i18n.t("Title"),
        setterType: "INPUT_SETTER",
        attrName: "title",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.STRING,
        shown: (type) => type === "showNotification",
      },
      {
        id: "description",
        labelName: i18n.t("Description"),
        setterType: "INPUT_SETTER",
        expectedType: VALIDATION_TYPES.STRING,
        attrName: "description",
        bindAttrName: "actionType",
        shown: (type) => type === "showNotification",
      },
      {
        id: "notification-type",
        labelName: i18n.t("Type"),
        setterType: "BASE_SELECT_SETTER",
        attrName: "notificationType",
        bindAttrName: "actionType",
        shown: (type) => type === "showNotification",
        options: [
          { label: "Success", value: "success" },
          { label: "Error", value: "error" },
          { label: "Warning", value: "warning" },
          { label: "Info", value: "info" },
        ],
      },
      {
        id: "duration",
        labelName: i18n.t("Duration"),
        setterType: "INPUT_SETTER",
        attrName: "duration",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.NUMBER,
        shown: (type) => type === "showNotification",
      },
      {
        id: "enabled",
        labelName: i18n.t("Only run when"),
        // labelDesc: i18n.t("xxxxx"),
        setterType: "INPUT_SETTER",
        expectedType: VALIDATION_TYPES.BOOLEAN,
        attrName: "enabled",
      },
    ],
  },
  {
    id: `${BASE_TYPE}-interaction-failed-event-handler`,
    attrName: "failedEvents",
    labelName: i18n.t("Failed"),
    // labelDesc: i18n.t("xxxxx"),
    setterType: "EVENT_HANDLER_SETTER",
    defaultValue: "failed",
    useCustomLayout: true,
    childrenSetter: [
      {
        id: "event",
        labelName: i18n.t("editor.inspect.setter_label.event"),
        setterType: "BASE_SELECT_SETTER",
        attrName: "eventType",
        options: [{ label: "Failed", value: "failed" }],
      },
      {
        id: "action",
        labelName: i18n.t("editor.inspect.setter_label.action"),
        setterType: "EVENT_ACTION_SELECT_SETTER",
        attrName: "actionType",
        options: [
          {
            label: "editor.inspect.setter_label.trigger_query",
            value: "datasource",
          },
          {
            label: "editor.inspect.setter_label.control_component",
            value: "widget",
          },
          {
            label: "editor.inspect.setter_label.run_script",
            value: "script",
          },
          {
            label: "editor.inspect.setter_label.go_to_url",
            value: "openUrl",
          },
          {
            label: "editor.inspect.setter_label.show_notification",
            value: "showNotification",
          },
        ],
      },
      {
        id: "query",
        labelName: i18n.t("Query"),
        setterType: "BASE_SELECT_SETTER",
        attrName: "queryID",
        bindAttrName: "actionType",
        shown: (type) => type === "datasource",
      },
      {
        id: "component",
        labelName: i18n.t("Component"),
        setterType: "EVENT_TARGET_SELECT_SETTER",
        attrName: "widgetID",
        bindAttrName: "actionType",
        shown: (type) => type === "widget",
      },
      {
        id: "Method",
        labelName: i18n.t("Method"),
        setterType: "EVENT_WIDGET_METHOD_SELECT_SETTER",
        attrName: "widgetMethod",
        bindAttrName: "widgetID",
        shown: (widgetID) => !!widgetID,
      },
      {
        id: "Value",
        labelName: i18n.t("Value"),
        setterType: "INPUT_SETTER",
        attrName: "widgetTargetValue",
        bindAttrName: "widgetMethod",
        shown: (widgetMethod) => widgetMethod === "setValue",
      },
      {
        id: "imageUrl",
        labelName: i18n.t("Value"),
        setterType: "INPUT_SETTER",
        attrName: "widgetTargetValue",
        bindAttrName: "widgetMethod",
        shown: (widgetMethod) => widgetMethod === "setImageUrl",
      },
      {
        id: "disabled",
        labelName: i18n.t("editor.inspect.setter_label.disabled"),
        setterType: "DYNAMIC_SWITCH_SETTER",
        expectedType: VALIDATION_TYPES.BOOLEAN,
        attrName: "disabled",
        bindAttrName: "type",
        useCustomLayout: true,
        shown: (type) => type === "widget",
      },
      {
        id: "script",
        setterType: "INPUT_SETTER",
        attrName: "script",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.STRING,
        shown: (type) => type === "script",
      },
      {
        id: "URL",
        labelName: i18n.t("URL"),
        setterType: "INPUT_SETTER",
        attrName: "url",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.STRING,
        shown: (type) => type === "openUrl",
      },
      {
        id: "newTab",
        labelName: i18n.t("New Tab"),
        setterType: "DYNAMIC_SWITCH_SETTER",
        expectedType: VALIDATION_TYPES.BOOLEAN,
        attrName: "newTab",
        bindAttrName: "actionType",
        useCustomLayout: true,
        shown: (type) => type === "openUrl",
      },
      {
        id: "title",
        labelName: i18n.t("Title"),
        setterType: "INPUT_SETTER",
        attrName: "title",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.STRING,
        shown: (type) => type === "showNotification",
      },
      {
        id: "description",
        labelName: i18n.t("Description"),
        setterType: "INPUT_SETTER",
        expectedType: VALIDATION_TYPES.STRING,
        attrName: "description",
        bindAttrName: "actionType",
        shown: (type) => type === "showNotification",
      },
      {
        id: "notification-type",
        labelName: i18n.t("Type"),
        setterType: "BASE_SELECT_SETTER",
        attrName: "notificationType",
        bindAttrName: "actionType",
        shown: (type) => type === "showNotification",
        options: [
          { label: "Success", value: "success" },
          { label: "Error", value: "error" },
          { label: "Warning", value: "warning" },
          { label: "Info", value: "info" },
        ],
      },
      {
        id: "duration",
        labelName: i18n.t("Duration"),
        setterType: "INPUT_SETTER",
        attrName: "duration",
        bindAttrName: "actionType",
        expectedType: VALIDATION_TYPES.NUMBER,
        shown: (type) => type === "showNotification",
      },
      {
        id: "enabled",
        labelName: i18n.t("Only run when"),
        // labelDesc: i18n.t("xxxxx"),
        setterType: "INPUT_SETTER",
        expectedType: VALIDATION_TYPES.BOOLEAN,
        attrName: "enabled",
      },
    ],
  },
]
